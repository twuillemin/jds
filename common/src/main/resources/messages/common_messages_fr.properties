# suppress inspection "UnusedProperty" for whole file
#######################################################################
# Messages for common controllers
#######################################################################
# Group controller
common.controller.group.get_denied=Seuls les membres du groupe {0} peuvent y accéder
common.controller.group.set_administrators_denied=Seul un administrateur du groupe {0} peut mettre  jour la liste des administrateurs
common.controller.group.set_users_denied=Seul un administrateur du groupe {0} peut mettre à jour la liste des utilisateurs
common.controller.group.delete_denied=Seuls les membres du groupe {0} peuvent le supprimer
# User controller
common.controller.user.get_denied=Seul l'utilisateur {0} peut accéder aux informations de son compte
common.controller.user.update_denied=Seul l'utilisateur {0} peut mettre à jour ses informations
common.controller.user.update_different_ids=L'identifiant donné et l'identifiant dans le corps de la requête sont pas identiques
common.controller.user.delete_denied=Seul un administrateur JDS peut supprimer l'utilisateur {0}
#######################################################################
# Messages for common exceptions
#######################################################################
# Messages for common exceptions
common.exception.not_found_id_class=Le {1} ayant un id "{0}" n'existe pas
common.exception.not_found_value_attribute_class=L'objet de type {2} ayant '{1}' avec une valeur de "{0}" n'existe pas
#######################################################################
# Messages for common security
#######################################################################
# Message for AuthenticatorJWT
common.security.authenticatorjwt.no_response=Aucune réponse du serveur d'authentification à l'URL "{0}"
# Message for JWTAuthenticationFilter
common.security.jwtfilter.expired=Le jeton JWT est expiré
common.security.jwtfilter.malformed_token=Le jeton JWT est malformé ({0})
common.security.jwtfilter.malformed_roles_missing=Les revendications des rôles sont malformées (les revendications absentes)
common.security.jwtfilter.malformed_roles_list=Les revendications des rôles sont malformées (les revendications ne sont pas une liste)
common.security.jwtfilter.malformed_roles_empty=Les revendications des rôles sont malformées (les revendications sont vides)
common.security.jwtfilter.malformed_permission_missing=Les revendications des permissions sont malformées (les revendications absentes)
common.security.jwtfilter.malformed_permission_map=Les revendications des permissions sont malformées (les revendications ne sont pas un dictionnaire)
common.security.jwtfilter.malformed_permission_userid=Les revendications des permissions sont malformées (les revendications sont n'ont pas l'attribute 'userId')
common.security.jwtfilter.malformed_permission_admin=Les revendications des permissions sont malformées (les revendications sont n'ont pas l'attribute 'adminGroupIds')
common.security.jwtfilter.malformed_permission_user=Les revendications des permissions sont malformées (les revendications sont n'ont pas l'attribute 'userGroupIds')
common.security.jwtfilter.malformed_permission_other=Les revendications des permissions sont malformées ({0})
#######################################################################
# Messages for common services
#######################################################################
# Group
common.service.group.get_by_name_multiple=Il y a plusieurs groupes ayant le même nom: "{0}"
common.service.group.create_already_persisted=À la création d'un groupe, le groupe à persister doit avoir son attribut 'id' avec une valeur nulle
common.service.group.create_name_already_exists=Pour créer un groupe, le nom ne doit pas déjà exister
common.service.group.create_creator_not_persisted=Pour créer un groupe, l'utilisateur créant le groupe doit être persisté préalablement
common.service.group.setusers_users_not_persisted=Pour mettre à jour les utilisateurs d'un groupe, les utilisateurs doivent être persistés préalablement
common.service.group.setusers_group_not_persisted=Pour mettre à jour les utilisateurs d'un groupe, le groupe doit être persisté préalablement
common.service.group.setadministrators_users_not_persisted=Pour mettre à jour les administrateurs d'un groupe, les utilisateurs administrateurs doivent être persistés préalablement
common.service.group.setadministrators_no_administrator_left=Pour mettre à jour les administrateurs d'un groupe, il faut qu'il y ait au moins un administeur actif après la mise à jour
common.service.group.setadministrators_group_not_persisted=Pour mettre à jour les administrateurs d'un groupe, le groupe doit être persisté préalablement
common.service.group.removeuser_user_not_persisted=Pour supprimer un utilisateur d'un groupe, l'utilisateur doit être persisté préalablement
common.service.group.removeuser_no_administrator_left=Pour supprimer un utilisateur d'un groupe, il faut qu'il y ait au moins un administeur actif après la suppression
common.service.group.removeuser_group_not_persisted=Pour supprimer un utilisateur d'un groupe, le groupe doit être persisté préalablement
common.service.group.delete_group_not_persisted=Pour supprimer un groupe, le groupe doit être persisté préalablement
# User
common.service.user.get_by_name_multiple=Il y a plusieurs utilisateurs ayant le même nom: "{0}"
common.service.user.create_already_persisted=À la création d'un utilisateur, l'utilisateur à persister doit avoir son attribut 'id' avec une valeur nulle
common.service.user.create_name_already_exists=Pour créer un groupe, le nom (attribut 'userName') ne doit pas déjà exister
common.service.user.create_groups_not_empty=Pour créer un groupe, la liste des groupes (attribut 'participatingGroupIds') doit être vide
common.service.user.update_not_persisted=Pour mettre à jour un utilisateur, l'utilisateur doit être persisté préalablement
common.service.user.update_group_modified=Lors de la mise à jour d'un utilisateur, la liste des groupes (attribut 'participatingGroupIds') ne peut pas être modifiée
common.service.user.update_username_not_available=Pour mettre à jour le nom d'un utilisateur, le nom (attribut 'userName') ne doit pas déjà exister
common.service.user.delete_no_administrator_left=Impossible de supprimer l'utilisateur {0} car cela laisserait les groupes suivants sans administrateur actif: {1}
common.service.user.delete_user_not_persisted=Pour supprimer un utilisateur, l'utilisateur doit être persisté préalablement
# Localization
common.service.localization.unknown_code=Une erreur inconnue s'est produite. Le code d'erreur est: "{0}"
# JsonConnector
common.service.jsonconnector.empty_response=Une reponse vide a été reçue en exécutant une requête de type {0} à l'URL "{1}"
common.service.jsonconnector.retrieve_http_exception=Impossible de charger des objets de type {0} en exécutant une requête de type {1} à l'URL "{2}" à cause de l'exception HttpClientErrorException: "{3}"
common.service.jsonconnector.retrieve_rest_exception=Impossible de charger des objets de type {0} en exécutant une requête de type {1} à l'URL "{2}" à cause de l'exception RestClientException: "{3}"
common.service.jsonconnector.retrieve_other_exception=Impossible de charger des objets de type {0} en exécutant une requête de type {1} à l'URL "{2}" à cause de l'exception Exception: "{3}"
common.service.jsonconnector.delete_http_exception=Impossible de supprimer des objets en exécutant une requête de type DELETE à l'URL "{0}" à cause de l'exception HttpClientErrorException: "{1}"
common.service.jsonconnector.delete_rest_exception=Impossible de supprimer des objets en exécutant une requête de type DELETE à l'URL "{0}" à cause de l'exception RestClientException: "{1}"
common.service.jsonconnector.delete_other_exception=Impossible de supprimer des objets en exécutant une requête de type DELETE à l'URL "{0}" à cause de l'exception Exception: "{1}"


