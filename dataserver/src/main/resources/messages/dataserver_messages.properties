# suppress inspection "UnusedProperty" for whole file
#######################################################################
# Messages for dataserver controllers
#######################################################################
# DataProvider
dataserver.controller.dataaccess.get_data_denied=Only the readers of the data source {0} can read its data
dataserver.controller.dataaccess.get_columns_denied=Only the readers of the data source {0} can read its columns
dataserver.controller.dataaccess.insert_denied=Only the writers of the data source {0} can insert into its data
dataserver.controller.dataaccess.mass_insert_denied=Only the writers of the data source {0} can mass insert into its data
dataserver.controller.dataaccess.update_denied=Only the writers of the data source {0} can update its data
dataserver.controller.dataaccess.delete_denied=Only the deleters of the data source {0} can delete its data
# DataProvider
dataserver.controller.dataprovider.create_denied=Only the administrators of the group {0} can create data providers
dataserver.controller.dataprovider.delete_denied=Only the administrators of the group {0} can delete data providers
dataserver.controller.dataprovider.get_denied=Only the administrators of the group {0} can access its data providers
dataserver.controller.dataprovider.preview_denied=Only the administrators of the group {0} can preview its data providers
dataserver.controller.dataprovider.get_datasources_denied=Only the administrators of the group {0} can list the data sources of its data providers
dataserver.controller.dataprovider.import_sql_denied=Only the administrators of the group {0} can create data providers by importing sql
dataserver.controller.dataprovider.update_denied=Only the administrators of the group {0} can update its data providers
dataserver.controller.dataprovider.update_different_ids=The given id and the id in the body of the data provider are not the same
# DataSource
dataserver.controller.datasource.create_denied=Only the administrators of the group {0} can create data sources
dataserver.controller.datasource.delete_denied=Only the administrators of the group {0} can delete data sources
dataserver.controller.datasource.get_denied=Only the administrators of the group {0} can access its data sources
dataserver.controller.datasource.update_denied=Only the administrators of the group {0} can update its data sources
dataserver.controller.datasource.update_different_ids=The given id and the id in the body of the data source are not the same
# Schema
dataserver.controller.schema.create_denied=Only the administrators of the group {0} can create schemas
dataserver.controller.schema.create_internal_denied=Only JDS administrators can create internal schemas for the group {0}
dataserver.controller.schema.delete_denied=Only the administrators of the group {0} can delete its schemas
dataserver.controller.schema.delete_internal_denied=Only JDS administrators can delete internal schemas for the group {0}
dataserver.controller.schema.get_dataproviders_denied=Only the administrators of the group {0} can list the data providers of its schemas
dataserver.controller.schema.get_denied=Only the administrators of the group {0} can access its schemas
dataserver.controller.schema.preview_table_denied=Only the administrators of the group {0} can preview the content of the table {1}
dataserver.controller.schema.get_tables_denied=Only the administrators of the group {0} can list the tables of its schemas
dataserver.controller.schema.update_denied=Only the administrators of the group {0} can update its schemas
dataserver.controller.schema.update_internal_denied=Only JDS administrators can delete internal schemas for the group {0}
dataserver.controller.schema.update_different_ids=The given id and the id in the body of the schema are not the same
# Server
dataserver.controller.server.create_denied=Only the administrators of the group {0} can create servers
dataserver.controller.server.create_internal_denied=Only JDS administrators can create internal servers for the group {0}
dataserver.controller.server.delete_denied=Only the administrators of the group {0} can delete its servers
dataserver.controller.server.delete_internal_denied=Only JDS administrators can delete internal servers for the group {0}
dataserver.controller.server.get_schemas_denied=Only the administrators of the group {0} can list the schemas of its servers
dataserver.controller.server.get_denied=Only the administrators of the group {0} can access its servers
dataserver.controller.server.update_denied=Only the administrators of the group {0} can update its servers
dataserver.controller.server.update_internal_denied=Only JDS administrators can delete internal servers for the group {0}
dataserver.controller.server.update_different_ids=The given id and the id in the body of the server are not the same
#######################################################################
# Messages for dataserver access services
#######################################################################
dataserver.service.access.data_provider_not_supported=Data providers of type {0} are not supported
dataserver.service.access.schema_not_supported=Schemas of type {0} are not supported
#######################################################################
# Messages for import services
#######################################################################
dataserver.service.import.initialize.group_not_persisted=Before creating the SQL environment for a Group, the group must be persisted
dataserver.service.import.import.data_provider_not_supported=Data providers of type {0} are not supported
#######################################################################
# Messages for model services
#######################################################################
# DataProvider
dataserver.service.model.dataprovider.get_for_schema_not_persisted=The given schema has no id
dataserver.service.model.dataprovider.get_for_schemas_not_persisted=One of the given schemas has no id
dataserver.service.model.dataprovider.create_already_persisted=When creating a data provider, the attribute 'id' must be set to null
dataserver.service.model.dataprovider.update_not_persisted=When updating a data provider, the attribute 'id' must not be null
dataserver.service.model.dataprovider.update_schemaid=When updating a data provider, the property schemaId can not be updated
dataserver.service.model.dataprovider.delete_referenced=Unable to delete the data provider {0} as it is referenced by one or more data sources
dataserver.service.model.dataprovider.delete_not_persisted=When deleting a data provider, the attribute 'id' must not be null
# DataSource
dataserver.service.model.datasource.get_for_dataprovider_not_persisted=The given data provider has no id
dataserver.service.model.datasource.get_for_dataproviders_not_persisted=One of the given data providers has no id
dataserver.service.model.datasource.create_already_persisted=When creating a data source, the attribute 'id' must be set to null
dataserver.service.model.datasource.update_not_persisted=When updating a data source, the attribute 'id' must not be null
dataserver.service.model.datasource.update_dataproviderid=When updating a data source, the property dataProviderId can not be updated
dataserver.service.model.datasource.delete_not_persisted=When deleting a data source, the attribute 'id' must not be null
# Lookup
dataserver.service.model.lookup.promote_column_not_exist=The column {0} does not exist in {1}
dataserver.service.model.lookup.promote_column_is_not_string=The column {0} in {1} is not of type STRING
dataserver.service.model.lookup.promote_dataprovider_without_primary_key=The data provider {0} does not have a primary and so its columns can not be updated to lookup
dataserver.service.model.lookup.promote_dataprovider_primary_key_value_null=The data provider {0} has a null value in the primary key for the column {1}
dataserver.service.model.lookup.promote_too_many_values=The record with id {0} have too many lookup values ({1} lookup values found)
dataserver.service.model.lookup.promote_unknown_lookup_value=The record with id {0} have a value that is not part of the lookup: "{1}"
dataserver.service.model.lookup.promote_too_large_lookup=The record with id {0} if converted to a lookup will be too large to fit in the column: "{1}" for {2} chars
dataserver.service.model.lookup.promote_failed_to_promote_lookup=Unable to promote the column {0} to lookup due to the following errors:\n{1}
dataserver.service.model.lookup.validate_too_many_lookups_for_column=For inserting / updating in the column {0}, the maximum number of lookups value is {1}, found {2} ("{3}")
dataserver.service.model.lookup.validate_bad_lookup_for_column=Data to insert / update in the column {0} has an unknown lookup code {1}
dataserver.service.model.lookup.validate_bad_data_type_for_column=For inserting / updating in the column {0}, the data must be provided as an array of string ({1} received)
# Schema
dataserver.service.model.schema.get_for_server_not_persisted=The given server has no id
dataserver.service.model.schema.get_for_servers_not_persisted=One of the given servers has no id
dataserver.service.model.schema.create_already_persisted=When creating a schema, the attribute 'id' must be set to null
dataserver.service.model.schema.update_not_persisted=When updating a schema, the attribute 'id' must not be null
dataserver.service.model.schema.update_serverid=When updating a schema, the property serverId of a schema can not be updated
dataserver.service.model.schema.delete_referenced=Unable to delete the schema {0} as it is referenced by one or more data providers
dataserver.service.model.schema.delete_not_persisted=When deleting a schema, the attribute 'id' must not be null
# Server
dataserver.service.model.server.create_already_persisted=When creating a server the attribute 'id' must be set to null
dataserver.service.model.server.update_not_persisted=When updating a server, the attribute 'id' must not be null
dataserver.service.model.server.update_customerdefined=When updating a server, the status (customer defined / internal)can not be updated
dataserver.service.model.server.update_groupid=When updating a server, the property groupId can not be updated
dataserver.service.model.server.delete_referenced=Unable to delete the server {0} as it is referenced by one or more schemas
dataserver.service.model.server.delete_not_persisted=When deleting a server, the attribute 'id' must not be null
# Preview
dataserver.service.model.preview.schema_not_supported=Schemas of type {0} are not supported
dataserver.service.model.preview.data_provider_not_supported=Data providers of type {0} are not supported
# Query
dataserver.service.query.and_children_not_boolean=The And predicate has at least one of its children which is not giving a boolean
dataserver.service.query.like_column_not_string=The Like predicate column attribute is referencing a column which is not of type String
dataserver.service.query.like_value_not_string=The Like predicate column attribute is referencing a column which is not of type String
dataserver.service.query.or_children_not_boolean=The Or predicate has at least one of its children which is not giving a boolean
dataserver.service.query.predicate_different_left_right=A predicate is comparing {0} and {1}
dataserver.service.query.column_not_in_dataspec=The request references the columns {0} which is not part of the DataSpec
dataserver.service.query.unable_to_walk=Unable to walk a RequestElement of type {0}
#######################################################################
# Messages for dataserver supplier sql
#######################################################################
# Service
dataserver.supplier.sql.service.server_is_not_sql=The Server {0} is not a SQL server
dataserver.supplier.sql.service.schema_is_not_sql=The Schema {0} is not a SQL schema
dataserver.supplier.sql.service.dataprovider_not_editable=The DataProvider {0} is not editable
dataserver.supplier.sql.service.cache_schema_not_persisted=Before retrieving a connection pool for a schema, the schema must be persisted in the database
dataserver.supplier.sql.service.insert_attribute_not_exist=One of the given attribute for insertion/update does not exist: {0}
dataserver.supplier.sql.service.importer_server_not_persisted=Before retrieving tables from a server, the server must be persisted in the database
dataserver.supplier.sql.service.importer_duplicated_columns=The given query is generating duplicated column names which is not supported: {0}
dataserver.supplier.sql.service.lookup_must_be_provided_as_list=For inserting/updating data, the lookup must be provided as List (column = {0}, data found = {1})
# Util
dataserver.supplier.sql.util.jdbc_type_not_supported=The JDBC type {0} is not supported
dataserver.supplier.sql.util.jdbc_column_type_not_supported=The column {0} of the ResultSet is of type {1} which is not supported
dataserver.supplier.sql.util.sql_parse_error=Exception while parsing the SQL: "{0}" for query "{1}
dataserver.supplier.sql.util.sql_parse_select_error=Error while parsing the SQL, no SELECT statement detected
dataserver.supplier.sql.util.order_column=The order is using the column '{0}' which is not part of the DataSpec
dataserver.supplier.sql.util.converter_bad_request_element=Unable to convert a RequestElement of type {0}
dataserver.supplier.sql.util.converter_bad_predicate=Unable to convert a Predicate of type {0}
dataserver.supplier.sql.util.converter_like_not_on_string=A predicate the type like (startsWith, endsWith, Contains) must have a String as a value


